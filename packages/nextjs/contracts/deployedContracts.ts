/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    TrustScriptProductReviewAttester: {
      address: "0x59b670e9fA9D0A427751Af201D676719a970857b",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "easAddress",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_productReviewSchemaUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "productId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyerAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "review",
              type: "string",
            },
            {
              internalType: "address",
              name: "sellerAddress",
              type: "address",
            },
          ],
          name: "attestProductReview",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "eas",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "productReviewSchemaUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    TrustScriptShop: {
      address: "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "ownerAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "trustScriptTokenAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "trustScriptProductReviewAttesterAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "attesterAddress",
              type: "address",
            },
          ],
          name: "TrustScriptShop__DisallowedAttester",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "productId",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__ExistedProductId",
          type: "error",
        },
        {
          inputs: [],
          name: "TrustScriptShop__FailedToSendETH",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "productId",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__NotExistedProductId",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amountOfETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInETH",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__UnequalAmountOfETHAndPriceInETH",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInToken",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__UnequalAmountOfTokenAndPriceInToken",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "priceInETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInToken",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__UnequalPriceInETHAndPriceInToken",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "sellerAddress",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct TrustScriptShop.Product",
              name: "product",
              type: "tuple",
            },
          ],
          name: "AddProduct",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "buyerAddress",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct TrustScriptShop.Product",
              name: "product",
              type: "tuple",
            },
          ],
          name: "BuyProductWithETH",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "buyerAddress",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct TrustScriptShop.Product",
              name: "product",
              type: "tuple",
            },
          ],
          name: "BuyProductWithToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "buyerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
          ],
          name: "MintTokenToBuyer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "buyerAddress",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "attestationUID",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "productId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "buyerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "review",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct TrustScriptShop.ProductReview",
              name: "productReview",
              type: "tuple",
            },
          ],
          name: "ReviewProduct",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amountOfETH",
              type: "uint256",
            },
          ],
          name: "WithdrawETH",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
          ],
          name: "WithdrawToken",
          type: "event",
        },
        {
          inputs: [],
          name: "REVIEW_PRODUCT_REWARD",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "TOKENS_PER_ETH",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              internalType: "struct TrustScriptShop.Product",
              name: "product",
              type: "tuple",
            },
          ],
          name: "addProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "allowedAttesters",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
          ],
          name: "buyProductWithETH",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
          ],
          name: "buyProductWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllProductReviews",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "attestationUID",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "productId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "buyerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "review",
                  type: "string",
                },
              ],
              internalType: "struct TrustScriptShop.ProductReview[]",
              name: "allProductReviews",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllProducts",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              internalType: "struct TrustScriptShop.Product[]",
              name: "allProducts",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numberOfProductReviews",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numberOfProducts",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "productReviewsArray",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "productId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyerAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "review",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "products",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "priceInETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInToken",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "productsArray",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "priceInETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInToken",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "productsMapping",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "review",
              type: "string",
            },
          ],
          name: "reviewProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "trustScriptProductReviewAttester",
          outputs: [
            {
              internalType: "contract TrustScriptProductReviewAttester",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "trustScriptToken",
          outputs: [
            {
              internalType: "contract TrustScriptToken",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawETH",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    TrustScriptToken: {
      address: "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "ownerAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "minterAddress",
              type: "address",
            },
          ],
          name: "TrustScriptToken__DisallowedMinter",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "minter",
              type: "address",
            },
          ],
          name: "allowMinter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "allowedMinters",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        approve: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        balanceOf: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decimals: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decreaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        increaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        name: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        symbol: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        totalSupply: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transfer: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transferFrom: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
  84532: {
    TrustScriptProductReviewAttester: {
      address: "0x80Eb3ccE63E5beDFe067e56e8c3dCCcbf1522247",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "easAddress",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_productReviewSchemaUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidEAS",
          type: "error",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "productId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "buyerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "review",
                  type: "string",
                },
              ],
              internalType: "struct ProductReview",
              name: "productReview",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "sellerAddress",
              type: "address",
            },
          ],
          name: "attestProductReview",
          outputs: [
            {
              internalType: "bytes32",
              name: "attestationUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "eas",
          outputs: [
            {
              internalType: "contract IEAS",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "productReviewSchemaUID",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    TrustScriptShop: {
      address: "0x97D12fC6cdfa2232AA5AEa3Eea9872ddE8D78E3D",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "ownerAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "trustScriptTokenAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "trustScriptProductReviewAttesterAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "productId",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__ExistedProductId",
          type: "error",
        },
        {
          inputs: [],
          name: "TrustScriptShop__FailedToSendETH",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "productId",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__NotExistedProductId",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "attesterAddress",
              type: "address",
            },
          ],
          name: "TrustScriptShop__UnauthorizedAttester",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amountOfETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInETH",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__UnequalAmountOfETHAndPriceInETH",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInToken",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__UnequalAmountOfTokenAndPriceInToken",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "priceInETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInToken",
              type: "uint256",
            },
          ],
          name: "TrustScriptShop__UnequalPriceInETHAndPriceInToken",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct TrustScriptShop.Product",
              name: "product",
              type: "tuple",
            },
          ],
          name: "AddProduct",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct TrustScriptShop.Product",
              name: "product",
              type: "tuple",
            },
          ],
          name: "BuyProductWithETH",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct TrustScriptShop.Product",
              name: "product",
              type: "tuple",
            },
          ],
          name: "BuyProductWithToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
          ],
          name: "MintTokenToBuyer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "productId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "buyerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "review",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct ProductReview",
              name: "productReview",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "uid",
              type: "bytes32",
            },
          ],
          name: "ReviewProduct",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amountOfETH",
              type: "uint256",
            },
          ],
          name: "WithdrawETH",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
          ],
          name: "WithdrawToken",
          type: "event",
        },
        {
          inputs: [],
          name: "REVIEW_PRODUCT_REWARD",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "TOKENS_PER_ETH",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              internalType: "struct TrustScriptShop.Product",
              name: "product",
              type: "tuple",
            },
          ],
          name: "addProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "allowedAttesters",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
          ],
          name: "buyProductWithETH",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
          ],
          name: "buyProductWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllProductReviews",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "productId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "buyerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "review",
                  type: "string",
                },
              ],
              internalType: "struct ProductReview[]",
              name: "allProductReviews",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllProducts",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "priceInETH",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "priceInToken",
                  type: "uint256",
                },
              ],
              internalType: "struct TrustScriptShop.Product[]",
              name: "allProducts",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numberOfProductReviews",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numberOfProducts",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "productReviewsArray",
          outputs: [
            {
              internalType: "uint256",
              name: "productId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyerAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "review",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "products",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "priceInETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInToken",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "productsArray",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "priceInETH",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "priceInToken",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "productsMapping",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "review",
              type: "string",
            },
          ],
          name: "reviewProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "trustScriptProductReviewAttester",
          outputs: [
            {
              internalType: "contract TrustScriptProductReviewAttester",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "trustScriptToken",
          outputs: [
            {
              internalType: "contract TrustScriptToken",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawETH",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    TrustScriptToken: {
      address: "0x519bFCA72320728dFfD698D9cE8b7FC6f4955431",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "ownerAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "minterAddress",
              type: "address",
            },
          ],
          name: "TrustScriptToken__UnauthorizedMinter",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "minter",
              type: "address",
            },
          ],
          name: "allowMinter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "allowedMinters",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amountOfToken",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        approve: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        balanceOf: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decimals: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        decreaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        increaseAllowance: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        name: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        symbol: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        totalSupply: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transfer: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        transferFrom: "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
